// Generated by https://quicktype.io

export interface Workflow {
    "display-name":       string;
    description:          string;
    position:             Position;
    input:                Put;
    output:               Put;
    attrib:               Attrib[];
    "workflow-item":      WorkflowItem[];
    presentation:         Presentation;
    "workflow-note":      WorkflowNote[];
    "root-name":          string;
    "object-name":        string;
    id:                   string;
    version:              string;
    "api-version":        string;
    "allowed-operations": string;
    restartMode:          number;
    resumeFromFailedMode: number;
}

export interface Attrib {
    value:        Value;
    description?: string;
    name:         string;
    type:         string;
    "read-only":  boolean;
}

export interface Value {
    value:   string;
    encoded: Encoded;
}

export enum Encoded {
    N = "n",
}

export interface Put {
    param: Param[];
}

export interface Param {
    description?:   string;
    name:           string;
    type:           string;
    "export-name"?: string;
}

export interface Position {
    y: number;
    x: number;
}

export interface Presentation {
    desc:     string;
    "p-step": PStep[];
}

export interface PStep {
    title:     string;
    "p-group": PGroup[];
}

export interface PGroup {
    title:     string;
    "p-param": PParam[];
}

export interface PParam {
    desc:      string;
    "p-qual"?: PQual[];
    name:      string;
}

export interface PQual {
    value: string;
    kind:  Kind;
    name:  string;
    type:  string;
}

export enum Kind {
    Static = "static",
}

export interface WorkflowItem {
    "display-name"?:       string;
    script?:               Script;
    "in-binding"?:         Binding;
    "out-binding"?:        Binding;
    position:              Position;
    name:                  string;
    "out-name"?:           string;
    "catch-name"?:         string;
    "throw-bind-name"?:    string;
    type:                  Type;
    comparator:            number;
    "alt-out-name"?:       string;
    description?:          string;
    "end-mode"?:           string;
    condition?:            Condition[];
    "business-status"?:    string;
    "linked-workflow-id"?: string;
    "prototype-id"?:       string;
    interaction?:          string;
}

export interface Condition {
    value:      string;
    name:       string;
    type:       string;
    comparator: number;
    label:      string;
}

export interface Binding {
    bind?: Param[];
}

export interface Script {
    value:   string;
    encoded: boolean;
}

export enum Type {
    Condition = "condition",
    CustomCondition = "custom-condition",
    End = "end",
    Link = "link",
    Task = "task",
}

export interface WorkflowNote {
    description: string;
    x:           number;
    y:           number;
    w:           number;
    h:           number;
    color:       string;
}
